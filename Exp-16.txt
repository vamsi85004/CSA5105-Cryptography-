#include <stdio.h>
#include <string.h>
#include <ctype.h>
double frequencies[] = {
    0.08167, 0.01492, 0.02782, 0.04253, 0.12702, 0.02228, 0.02015,
    0.06094, 0.06966, 0.00153, 0.00772, 0.04025, 0.02406, 0.06749,
    0.07507, 0.01929, 0.00095, 0.05987, 0.06327, 0.09056, 0.02758,
    0.00978, 0.02360, 0.00150, 0.01974, 0.00074
};
void calculate_frequencies(char *ciphertext, double *frequencies) {
    int counts[26] = {0};
    int length = strlen(ciphertext);
    for (int i = 0; i < length; i++) {
        if (isalpha(ciphertext[i])) {
            counts[tolower(ciphertext[i]) - 'a']++;
        }
    }
    for (int i = 0; i < 26; i++) {
        frequencies[i] = (double)counts[i] / length;
    }
}
void letter_frequency_attack(char *ciphertext, char *plaintext) {
    double ciphertext_frequencies[26];
    calculate_frequencies(ciphertext, ciphertext_frequencies);
    int mapping[26];
    for (int i = 0; i < 26; i++) {
        double max_frequency = 0;
        int max_index = 0;
        for (int j = 0; j < 26; j++) {
            if (ciphertext_frequencies[j] > max_frequency) {
                max_frequency = ciphertext_frequencies[j];
                max_index = j;
            }
        }
        mapping[max_index] = i;
        ciphertext_frequencies[max_index] = -1;
    }
    int length = strlen(ciphertext);
    for (int i = 0; i < length; i++) {
        if (isalpha(ciphertext[i])) {
            char base = isupper(ciphertext[i]) ? 'A' : 'a';
            plaintext[i] = mapping[tolower(ciphertext[i]) - 'a'] + base;
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
    plaintext[length] = '\0';
}
int main() {
    char ciphertext[] = "your ciphertext here";
    char plaintext[100];
    letter_frequency_attack(ciphertext, plaintext);
    printf("Plaintext: %s\n", plaintext);
    return 0;
}

