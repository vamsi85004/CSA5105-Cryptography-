#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define ALPHABET_SIZE 26
void encrypt(char *plaintext, int *key, char *ciphertext) {
    int i;
    for (i = 0; i < strlen(plaintext); i++) {
        if (isalpha(plaintext[i])) {
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            ciphertext[i] = ((plaintext[i] - base + key[i]) % ALPHABET_SIZE) + base;
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[i] = '\0';
}
void decrypt(char *ciphertext, int *key, char *plaintext) {
    int i;
    for (i = 0; i < strlen(ciphertext); i++) {
        if (isalpha(ciphertext[i])) {
            char base = isupper(ciphertext[i]) ? 'A' : 'a';
            plaintext[i] = ((ciphertext[i] - base - key[i] + ALPHABET_SIZE) % ALPHABET_SIZE) + base;
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
    plaintext[i] = '\0';
}
void find_key(char *plaintext, char *ciphertext, int *key) {
    int i;
    for (i = 0; i < strlen(plaintext); i++) {
        if (isalpha(plaintext[i]) && isalpha(ciphertext[i])) {
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            key[i] = (ciphertext[i] - plaintext[i] + ALPHABET_SIZE) % ALPHABET_SIZE;
        } else {
            key[i] = 0;
        }
    }
}
int main() {
    char plaintext[] = "sendmoremoney";
    int key[] = {9, 0, 1, 7, 23, 15, 21, 14, 11, 11, 2, 8, 9};
    char ciphertext[100];
    encrypt(plaintext, key, ciphertext);
    printf("Ciphertext: %s\n", ciphertext);
    char new_plaintext[] = "cashnotneeded";
    int new_key[100];
    find_key(new_plaintext, ciphertext, new_key);
    printf("New key: ");
    for (int i = 0; i < strlen(new_plaintext); i++) {
        printf("%d ", new_key[i]);
    }
    printf("\n");
    return 0;
}
