#include <stdio.h>
#include <string.h>
#include <ctype.h>
void generate_cipher_alphabet(char *keyword, char *cipher_alphabet) {
    int used[26] = {0};
    int index = 0;
    for (int i = 0; i < strlen(keyword); i++) {
        char c = toupper(keyword[i]);
        if (!used[c - 'A']) {
            cipher_alphabet[index++] = c;
            used[c - 'A'] = 1;
        }
    }
    for (char c = 'A'; c <= 'Z'; c++) {
        if (!used[c - 'A']) {
            cipher_alphabet[index++] = c;
        }
    }
}
void encrypt(char *plaintext, char *cipher_alphabet) {
    char *ptr = plaintext;
    while (*ptr) {
        if (isalpha(*ptr)) {
            char base = isupper(*ptr) ? 'A' : 'a';
            *ptr = cipher_alphabet[*ptr - base] + (isupper(*ptr) ? 0 : 32);
        }
        ptr++;
    }
}
void decrypt(char *ciphertext, char *cipher_alphabet) {
    char *ptr = ciphertext;
    while (*ptr) {
        if (isalpha(*ptr)) {
            char base = isupper(*ptr) ? 'A' : 'a';
            for (int i = 0; i < 26; i++) {
                if (tolower(cipher_alphabet[i]) == tolower(*ptr)) {
                    *ptr = i + base;
                    break;
                }
            }
        }
        ptr++;
    }
}
int main() {
    char keyword[] = "CIPHER";
    char cipher_alphabet[27];
    generate_cipher_alphabet(keyword, cipher_alphabet);
    cipher_alphabet[26] = '\0';
    printf("Cipher Alphabet: %s\n", cipher_alphabet);
    char plaintext[100];
    printf("Enter plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = 0;  // Remove newline character
    char encrypted_text[100];
    strcpy(encrypted_text, plaintext);
    encrypt(encrypted_text, cipher_alphabet);
    printf("Encrypted text: %s\n", encrypted_text);
    char decrypted_text[100];
    strcpy(decrypted_text, encrypted_text);
    decrypt(decrypted_text, cipher_alphabet);
    printf("Decrypted text: %s\n", decrypted_text);
    return 0;
}

